<h1>View Player Relationships Below</h1>

<script>
(function(d3) {
  var matrix = [
    [11975,  5871, 8916, 2868],
    [ 1951, 10048, 2060, 6171],
    [ 8010, 16145, 8090, 8045],
    [ 1013,   990,  940, 6907]
  ];
  
  var chord = d3.layout.chord()
      .padding(.05)
      .sortSubgroups(d3.descending)
      .sortChords(d3.descending)
      .matrix(matrix);
  
  var width = 1280,
      height = 800,
      r1 = height / 2,
      r0 = r1-80;
  
  var fill = d3.scale.category20c();
  
  var arc = d3.svg.arc().innerRadius(r0).outerRadius(r0 + 20);
  
  var svg = d3.select("body").append("svg")
      .attr("width", width)
      .attr("height", height)
    .append("g")
      .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");
  
  svg.append("g").selectAll("path")
      .data(chord.groups)
    .enter().append("path")
      .style("fill", function(d) { return fill(d.index); })
      .style("stroke", function(d) { return fill(d.index); })
      .attr("d", arc)
      .on("mouseover", fade(.1))
      .on("mouseout", fade(1));
      
  var textLabels = ["Black", "Blonde", "Brown", "Red"]; 
  svg.append("g").selectAll("text")
      .data(chord.groups)
      .enter()
      .append("text")
        .each(function(d) { d.angle = (d.startAngle + d.endAngle) / 2; })
        .attr("dy", ".35em")
  .attr("text-anchor", function(d) { return d.angle > Math.PI ? "end" : null; })
       .attr("transform", function(d) {
         return "rotate(" + (d.angle * 180 / Math.PI - 90) + ")"
             + "translate(" + (r0 + 26) + ")"
             + (d.angle > Math.PI ? "rotate(180)" : "");
       })
        .text(function(d) { return textLabels[d.index]; });
  
  svg.append("g")
      .attr("class", "chord")
    .selectAll("path")
      .data(chord.chords)
    .enter().append("path")
      .attr("d", d3.svg.chord().radius(r0))
      .style("fill", function(d) { return fill(d.target.index); })
      .style("opacity", 1);
  
  // Returns an event handler for fading a given chord group.
  function fade(opacity) {
    return function(g, i) {
      svg.selectAll(".chord path")
          .filter(function(d) { return d.source.index != i && d.target.index != i; })
        .transition()
          .style("opacity", opacity);
    };
  }
})(window.d3);
</script>

<br>
<br>
<a href="/">Home</a>